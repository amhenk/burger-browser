webpackJsonp([1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _angular = __webpack_require__(1);
	
	var _angular2 = _interopRequireDefault(_angular);
	
	__webpack_require__(3);
	
	var _register = __webpack_require__(16);
	
	var _register2 = _interopRequireDefault(_register);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import login from './auth/login.component';
	// import pageNotFound from './common/pageNotFound.component';
	
	_angular2.default.module('burgerBrowser', ['ngRoute',
	// home,
	_register2.default]).config(['$locationProvider', '$routeProvider', function burgerBrowserConfig($locationProvider, $routeProvider) {
	  // use HTML5 History to remove the # in URLs
	  $locationProvider.html5Mode(true);
	
	  // setup URL routes
	  $routeProvider.when('/', {
	    template: '<app-home></app-home>'
	  })
	
	  // deal with funky Facebook redirect URL addition _=_
	  .when('/_=_', {
	    redirectTo: '/'
	  }).when('/register', {
	    template: '<app-register></app-register>'
	  }).when('/login', {
	    template: '<app-login></app-login>'
	  }).otherwise({
	    template: '<app-page-not-found></app-page-not-found>'
	  });
	}]);
	// import home from './common/home.component';

/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _angular = __webpack_require__(1);
	
	var _angular2 = _interopRequireDefault(_angular);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _angular2.default.module('header', [
	  // 'ui.bootstrap'
	]).component('appHeader', {
	  templateUrl: './common/header.template.html',
	  controller: ['$location', 'authService', function HeaderController($location) {
	    var self = this;
	    // isCollapsed toggles when the user selects a link from the navbar menu
	    self.isCollapsed = true;
	  }],
	  bindings: {
	    user: '<'
	  }
	}).name;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _angular = __webpack_require__(1);
	
	var _angular2 = _interopRequireDefault(_angular);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _angular2.default.module('footer', []).component('appFooter', {
	  templateUrl: './common/footer.template.html',
	  controller: [function FooterController() {}]
	}).name;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _angular = __webpack_require__(1);
	
	var _angular2 = _interopRequireDefault(_angular);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _angular2.default.module('authService', []).factory('authService', ['$http', function ($http) {
	
	  var authService = {};
	
	  //delete the session from the server to logout user
	  authService.logout = function () {
	    return $http.get('/api/logout');
	  };
	
	  //check if user is logged in
	  authService.isLoggedIn = function () {
	    return $http.get('/api/isloggedin');
	  };
	
	  //get the user's profile data
	  authService.getUser = function () {
	    return $http.get('/api/profile');
	  };
	
	  //register a new local user
	  authService.register = function (credentials) {
	    return $http.post('/api/register', credentials);
	  };
	
	  //log in an existing local user
	  authService.login = function (credentials) {
	    return $http.post('/api/login', credentials);
	  };
	
	  return authService;
	}]).name;

/***/ },
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _angular = __webpack_require__(1);
	
	var _angular2 = _interopRequireDefault(_angular);
	
	var _header = __webpack_require__(10);
	
	var _header2 = _interopRequireDefault(_header);
	
	var _footer = __webpack_require__(11);
	
	var _footer2 = _interopRequireDefault(_footer);
	
	var _auth = __webpack_require__(12);
	
	var _auth2 = _interopRequireDefault(_auth);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _angular2.default.module('register', [_header2.default, _footer2.default, _auth2.default]).component('appRegister', {
	  templateUrl: './auth/register.template.html',
	  controller: ['$location', 'authService', function RegisterController($location, authService) {
	    var self = this;
	
	    //variable to toggle email form
	    self.showEmailForm = false;
	
	    self.emailButtonClick = function () {
	      self.showEmailForm = !self.showEmailForm; //toggle email form
	      self.registerError = null; //clear any errors
	    };
	
	    //create an object to hold form data
	    self.credentials = {
	      name: null,
	      email: null,
	      password: null
	    };
	
	    //local email registration
	    self.register = function () {
	      self.registerError = null;
	      //if no password is entered
	      if (!self.credentials.password) {
	        self.registerError = 'Please provide a password.';
	      }
	
	      //if email entered is invalid
	      if (!self.credentials.email) {
	        self.registerError = 'Please provide a valid email.';
	      }
	
	      //if no name is entered
	      if (!self.credentials.name) {
	        self.registerError = 'Please provide your name.';
	      }
	
	      //if both email and password are provided and valid
	      if (self.credentials.email && self.credentials.password) {
	        authService.register(self.credentials)
	        //registration was successful
	        .then(function (response) {
	          $location.path('/');
	        })
	
	        //registation encountered an error
	        .catch(function (err) {
	          self.registerError = err.data.message;
	        });
	      }
	    };
	  }]
	}).name;

/***/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,